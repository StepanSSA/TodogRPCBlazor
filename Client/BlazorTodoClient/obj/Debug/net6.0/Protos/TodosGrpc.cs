// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/todos.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace BlazorTodoClient {
  public static partial class Todos
  {
    static readonly string __ServiceName = "todos.Todos";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BlazorTodoClient.GetTodosRequest> __Marshaller_todos_GetTodosRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BlazorTodoClient.GetTodosRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BlazorTodoClient.GetTodosReply> __Marshaller_todos_GetTodosReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BlazorTodoClient.GetTodosReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BlazorTodoClient.AddTodoRequest> __Marshaller_todos_AddTodoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BlazorTodoClient.AddTodoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BlazorTodoClient.AddTodoReply> __Marshaller_todos_AddTodoReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BlazorTodoClient.AddTodoReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BlazorTodoClient.DeleteTodoRequest> __Marshaller_todos_DeleteTodoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BlazorTodoClient.DeleteTodoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BlazorTodoClient.ComplitedReply> __Marshaller_todos_ComplitedReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BlazorTodoClient.ComplitedReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BlazorTodoClient.SetTodoComplitedRequest> __Marshaller_todos_SetTodoComplitedRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BlazorTodoClient.SetTodoComplitedRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BlazorTodoClient.UnsetTodoComplitedRequest> __Marshaller_todos_UnsetTodoComplitedRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BlazorTodoClient.UnsetTodoComplitedRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BlazorTodoClient.SetSubtaskComplitedRequest> __Marshaller_todos_SetSubtaskComplitedRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BlazorTodoClient.SetSubtaskComplitedRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BlazorTodoClient.UnsetSubtaskComplitedRequest> __Marshaller_todos_UnsetSubtaskComplitedRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BlazorTodoClient.UnsetSubtaskComplitedRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BlazorTodoClient.AddSubtaskRequest> __Marshaller_todos_AddSubtaskRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BlazorTodoClient.AddSubtaskRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BlazorTodoClient.AddSubtaskReply> __Marshaller_todos_AddSubtaskReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BlazorTodoClient.AddSubtaskReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BlazorTodoClient.DeleteSubtaskRequest> __Marshaller_todos_DeleteSubtaskRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BlazorTodoClient.DeleteSubtaskRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::BlazorTodoClient.GetTodosRequest, global::BlazorTodoClient.GetTodosReply> __Method_GetTodos = new grpc::Method<global::BlazorTodoClient.GetTodosRequest, global::BlazorTodoClient.GetTodosReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTodos",
        __Marshaller_todos_GetTodosRequest,
        __Marshaller_todos_GetTodosReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::BlazorTodoClient.AddTodoRequest, global::BlazorTodoClient.AddTodoReply> __Method_AddTodo = new grpc::Method<global::BlazorTodoClient.AddTodoRequest, global::BlazorTodoClient.AddTodoReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddTodo",
        __Marshaller_todos_AddTodoRequest,
        __Marshaller_todos_AddTodoReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::BlazorTodoClient.DeleteTodoRequest, global::BlazorTodoClient.ComplitedReply> __Method_DeleteTodo = new grpc::Method<global::BlazorTodoClient.DeleteTodoRequest, global::BlazorTodoClient.ComplitedReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteTodo",
        __Marshaller_todos_DeleteTodoRequest,
        __Marshaller_todos_ComplitedReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::BlazorTodoClient.SetTodoComplitedRequest, global::BlazorTodoClient.ComplitedReply> __Method_SetTodoComplited = new grpc::Method<global::BlazorTodoClient.SetTodoComplitedRequest, global::BlazorTodoClient.ComplitedReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetTodoComplited",
        __Marshaller_todos_SetTodoComplitedRequest,
        __Marshaller_todos_ComplitedReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::BlazorTodoClient.UnsetTodoComplitedRequest, global::BlazorTodoClient.ComplitedReply> __Method_UnsetTodoComplited = new grpc::Method<global::BlazorTodoClient.UnsetTodoComplitedRequest, global::BlazorTodoClient.ComplitedReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UnsetTodoComplited",
        __Marshaller_todos_UnsetTodoComplitedRequest,
        __Marshaller_todos_ComplitedReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::BlazorTodoClient.SetSubtaskComplitedRequest, global::BlazorTodoClient.ComplitedReply> __Method_SetSubtaskComplited = new grpc::Method<global::BlazorTodoClient.SetSubtaskComplitedRequest, global::BlazorTodoClient.ComplitedReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetSubtaskComplited",
        __Marshaller_todos_SetSubtaskComplitedRequest,
        __Marshaller_todos_ComplitedReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::BlazorTodoClient.UnsetSubtaskComplitedRequest, global::BlazorTodoClient.ComplitedReply> __Method_UnsetSubtaskComplited = new grpc::Method<global::BlazorTodoClient.UnsetSubtaskComplitedRequest, global::BlazorTodoClient.ComplitedReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UnsetSubtaskComplited",
        __Marshaller_todos_UnsetSubtaskComplitedRequest,
        __Marshaller_todos_ComplitedReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::BlazorTodoClient.AddSubtaskRequest, global::BlazorTodoClient.AddSubtaskReply> __Method_AddSubtask = new grpc::Method<global::BlazorTodoClient.AddSubtaskRequest, global::BlazorTodoClient.AddSubtaskReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddSubtask",
        __Marshaller_todos_AddSubtaskRequest,
        __Marshaller_todos_AddSubtaskReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::BlazorTodoClient.DeleteSubtaskRequest, global::BlazorTodoClient.ComplitedReply> __Method_DeleteSubtask = new grpc::Method<global::BlazorTodoClient.DeleteSubtaskRequest, global::BlazorTodoClient.ComplitedReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteSubtask",
        __Marshaller_todos_DeleteSubtaskRequest,
        __Marshaller_todos_ComplitedReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::BlazorTodoClient.TodosReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Todos</summary>
    public partial class TodosClient : grpc::ClientBase<TodosClient>
    {
      /// <summary>Creates a new client for Todos</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TodosClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Todos that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TodosClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TodosClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TodosClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BlazorTodoClient.GetTodosReply GetTodos(global::BlazorTodoClient.GetTodosRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTodos(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BlazorTodoClient.GetTodosReply GetTodos(global::BlazorTodoClient.GetTodosRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTodos, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BlazorTodoClient.GetTodosReply> GetTodosAsync(global::BlazorTodoClient.GetTodosRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTodosAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BlazorTodoClient.GetTodosReply> GetTodosAsync(global::BlazorTodoClient.GetTodosRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTodos, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BlazorTodoClient.AddTodoReply AddTodo(global::BlazorTodoClient.AddTodoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddTodo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BlazorTodoClient.AddTodoReply AddTodo(global::BlazorTodoClient.AddTodoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddTodo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BlazorTodoClient.AddTodoReply> AddTodoAsync(global::BlazorTodoClient.AddTodoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddTodoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BlazorTodoClient.AddTodoReply> AddTodoAsync(global::BlazorTodoClient.AddTodoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddTodo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BlazorTodoClient.ComplitedReply DeleteTodo(global::BlazorTodoClient.DeleteTodoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTodo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BlazorTodoClient.ComplitedReply DeleteTodo(global::BlazorTodoClient.DeleteTodoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteTodo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BlazorTodoClient.ComplitedReply> DeleteTodoAsync(global::BlazorTodoClient.DeleteTodoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTodoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BlazorTodoClient.ComplitedReply> DeleteTodoAsync(global::BlazorTodoClient.DeleteTodoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteTodo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BlazorTodoClient.ComplitedReply SetTodoComplited(global::BlazorTodoClient.SetTodoComplitedRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetTodoComplited(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BlazorTodoClient.ComplitedReply SetTodoComplited(global::BlazorTodoClient.SetTodoComplitedRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetTodoComplited, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BlazorTodoClient.ComplitedReply> SetTodoComplitedAsync(global::BlazorTodoClient.SetTodoComplitedRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetTodoComplitedAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BlazorTodoClient.ComplitedReply> SetTodoComplitedAsync(global::BlazorTodoClient.SetTodoComplitedRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetTodoComplited, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BlazorTodoClient.ComplitedReply UnsetTodoComplited(global::BlazorTodoClient.UnsetTodoComplitedRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnsetTodoComplited(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BlazorTodoClient.ComplitedReply UnsetTodoComplited(global::BlazorTodoClient.UnsetTodoComplitedRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UnsetTodoComplited, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BlazorTodoClient.ComplitedReply> UnsetTodoComplitedAsync(global::BlazorTodoClient.UnsetTodoComplitedRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnsetTodoComplitedAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BlazorTodoClient.ComplitedReply> UnsetTodoComplitedAsync(global::BlazorTodoClient.UnsetTodoComplitedRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UnsetTodoComplited, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BlazorTodoClient.ComplitedReply SetSubtaskComplited(global::BlazorTodoClient.SetSubtaskComplitedRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetSubtaskComplited(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BlazorTodoClient.ComplitedReply SetSubtaskComplited(global::BlazorTodoClient.SetSubtaskComplitedRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetSubtaskComplited, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BlazorTodoClient.ComplitedReply> SetSubtaskComplitedAsync(global::BlazorTodoClient.SetSubtaskComplitedRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetSubtaskComplitedAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BlazorTodoClient.ComplitedReply> SetSubtaskComplitedAsync(global::BlazorTodoClient.SetSubtaskComplitedRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetSubtaskComplited, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BlazorTodoClient.ComplitedReply UnsetSubtaskComplited(global::BlazorTodoClient.UnsetSubtaskComplitedRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnsetSubtaskComplited(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BlazorTodoClient.ComplitedReply UnsetSubtaskComplited(global::BlazorTodoClient.UnsetSubtaskComplitedRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UnsetSubtaskComplited, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BlazorTodoClient.ComplitedReply> UnsetSubtaskComplitedAsync(global::BlazorTodoClient.UnsetSubtaskComplitedRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnsetSubtaskComplitedAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BlazorTodoClient.ComplitedReply> UnsetSubtaskComplitedAsync(global::BlazorTodoClient.UnsetSubtaskComplitedRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UnsetSubtaskComplited, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BlazorTodoClient.AddSubtaskReply AddSubtask(global::BlazorTodoClient.AddSubtaskRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddSubtask(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BlazorTodoClient.AddSubtaskReply AddSubtask(global::BlazorTodoClient.AddSubtaskRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddSubtask, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BlazorTodoClient.AddSubtaskReply> AddSubtaskAsync(global::BlazorTodoClient.AddSubtaskRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddSubtaskAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BlazorTodoClient.AddSubtaskReply> AddSubtaskAsync(global::BlazorTodoClient.AddSubtaskRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddSubtask, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BlazorTodoClient.ComplitedReply DeleteSubtask(global::BlazorTodoClient.DeleteSubtaskRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSubtask(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BlazorTodoClient.ComplitedReply DeleteSubtask(global::BlazorTodoClient.DeleteSubtaskRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteSubtask, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BlazorTodoClient.ComplitedReply> DeleteSubtaskAsync(global::BlazorTodoClient.DeleteSubtaskRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSubtaskAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BlazorTodoClient.ComplitedReply> DeleteSubtaskAsync(global::BlazorTodoClient.DeleteSubtaskRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteSubtask, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override TodosClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new TodosClient(configuration);
      }
    }

  }
}
#endregion
